export type Algos = {
	multiply: (a: number, b: number) => number;
	getFirstElement: (arr: any[]) => any;
	removeLastElement: (arr: any[]) => any[];
	sumArray: (arr: number[]) => number;
	reverseString: (str: string) => string;
	getMax: (arr: number[]) => number;
	getMin: (arr: number[]) => number;
	removeVowels: (str: string) => string;
	sortArray: (arr: number[]) => number[];
	getStringRotations: (str: string) => string[];
	incrementArray: (arr: number[]) => number[];
	getLengths: (arr: string[]) => number[];
	getFirstLetters: (arr: string[]) => string[];
	getLastLetters: (arr: string[]) => string[];
	filterLongStrings: (arr: string[]) => string[];
	snake_case: (str: string) => string;
	mergeArrays: (arr1: string[], arr2: string[]) => string[];
	filterStringsWithE: (arr: string[]) => string[];
	filterAndSortEvenNumbers: (arr: number[]) => number[];
	findShort: (str: string) => number;
	anagram: (str1: string, str2: string) => boolean;
	removeDoubleLetters: (str: string) => string;
	createPhoneNumber: (arr: number[]) => string;
	findMissingLetter: (arr: string[]) => string;
	sortString: (arr: string[]) => string[];
	otherAngle: (a: number, b: number) => number;
	isLeapYear: (year: number) => boolean;
	sortAnimals: (arr: string[]) => string[][];
	decodeMessage: (str: string) => string;
	calculateScore: (arr: string[]) => number;
};
